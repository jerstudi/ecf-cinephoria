model Organization {
  id               String                   @id @default(nanoid(11))
  slug             String                   @unique @default(nanoid(6))
  name             String
  image            String?
  planId           String                   @default("FREE")
  email            String
  stripeCustomerId String?
  createdAt        DateTime                 @default(now())
  updatedAt        DateTime                 @updatedAt
  members          OrganizationMembership[]
  plan             OrganizationPlan         @relation(fields: [planId], references: [id], onDelete: Cascade)

  @@index([slug])
}

model OrganizationMembership {
  id             String                       @id @default(nanoid(11))
  roles          OrganizationMembershipRole[] @default([MEMBER])
  userId         String
  organizationId String
  createdAt      DateTime                     @default(now())
  updatedAt      DateTime                     @updatedAt
  organization   Organization                 @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  user           User                         @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("Membership")
}

model OrganizationPlan {
  id             String         @id @default(nanoid(11))
  name           String
  maximumMembers Int            @default(1)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  organization   Organization[]
}

enum OrganizationMembershipRole {
  OWNER
  ADMIN
  MEMBER
}
